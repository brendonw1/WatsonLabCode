function PopRatePerBinData = PopRatePerBin(basepath,basename,binwidthsecs)

%% Constants
if ~exist('binwidthsecs','var')
    binwidthsecs = 10;
end
if ~exist('smoothingnumpoints','var')
    smoothingnumpoints = 1;
end
sampfreq = 10000;
plotting = 0;
savingfigs = 0;

%% Variables and Loading
if ~exist('basepath','var')
    [~,basename,~] = fileparts(cd);
    basepath = cd;
end
load(fullfile(basepath,[basename '_SSubtypes.mat']))
numEcells = length(Se);
numIcells = length(Si);

% if numIcells<3
%     return
% end

EPopRate = MakeQfromTsd(oneSeries(Se),binwidthsecs*sampfreq);
IPopRate = MakeQfromTsd(oneSeries(Se),binwidthsecs*sampfreq);

bincentertimes = TimePoints(EPopRate,'s');
EPopRate = Data(EPopRate)/binwidthsecs;
IPopRate = Data(IPopRate)/binwidthsecs;
EPopRatePerCell = EPopRate/numEcells;
IPopRatePerCell = IPopRate/numIcells;

EPerCellRate = Data(MakeQfromS(Se,binwidthsecs*sampfreq))/binwidthsecs;
IPerCellRate = Data(MakeQfromS(Si,binwidthsecs*sampfreq))/binwidthsecs;

EMeanPerCellRate = mean(EPerCellRate,2);

%% Save
PopRatePerBinData = v2struct(EPopRatePerCell,IPopRatePerCell,EPopRate,IPopRate,binwidthsecs,bincentertimes,numEcells,numIcells);
save(fullfile(basepath,[basename '_PopRatePerBinData.mat']),'PopRatePerBinData')