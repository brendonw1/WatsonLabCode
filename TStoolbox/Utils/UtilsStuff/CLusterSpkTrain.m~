function [Idx,R,D] = ClusterSpkTrain(C)

%  [Idx,R] = ClusterSpkTrain(S,n,bins,winL) cluster binned spikes from cells S into n clusters
%  
%  INPUT : 
%  	S :  a tsd array of cells
%  	n : number of clusters
%  	bins : size of binned firing rates
%  	winL : size of smooting window expressed in number of bins
%  OUTOUT:
%  	Idx : clusters indices associated with each cells
%  	c : simimlarity matrix
%  	R : mean similarity of the clusers
%  	D : separation rate of clusters (high value for well separated clusters)
%  
%  adapted from J-M Fellous, J Neuroscience 2004
%  Adrien Peyrache 2007

diagIx = find(eye(size(C)));
s = C(~diagIx);
meanS = mean(mean(s));

tauVal = [0.01:0.01:0.3];
sdB = [];

for tau=tauVal
	
	b = 1./(1+exp((meanS-s(:))/tau));
	[H,B] = hist(b);
	sdB = [sdB;std(C)];

end

[m,ix] = min(sdB);
tau = tauVal(ix);

b = 1./(1+exp((meanS-s(:))/tau));
c = reshape(b,[nbC nbC]);
c=s;

cM = corrcoef(dQsm);
cM = cM - diag(diag(cM));
%  [Idx,C] = kmeans(dQsm',nbClusters);
[Idx,C] = kmeans(c,nbClusters,'distance','correlation');

for i=1:nbClusters;

	inClu = c(:,Idx==i);
	outClu = c(:,Idx~=i);
	n = sum(Idx==i);	
	Din=0;
	Dout=0;

	for j=1:n
		Din = Din+norm(inClu(:,j)-C(i,:)');
	end
	for j=1:nbC-n
		Dout = Dout+norm(outClu(:,j)-C(i,:)');
	end


	D(i) = Dout/Din*n/(nbC-n);
	R(i) = sum(sum(c(Idx==i,Idx==i)))/n^2;

end

[val,ix] = sort(Idx);

cM = c-diag(diag(c));

if 1
	figure(1),clf
	imagesc(cM)
	
	maxC = max(max(cM));

	figure(2),clf
	imagesc([maxC*[0;val]'/nbClusters;[maxC*val/nbClusters cM(ix,ix)]])
	
	figure(3),clf
	imagesc(cM)


end
