function A = truc(A)

% Find Upstate 
% Adapted from Muckovski, Cerebral Cortex, 2007
% Adrien Peyrache 2007


A = getResource(A,'PfcTrace');
A = getResource(A,'Sleep1DeltaEpoch');
A = getResource(A,'Sleep1SpindleEpoch');
A = getResource(A,'Sleep2DeltaEpoch');
A = getResource(A,'Sleep2SpindleEpoch');
A = getResource(A,'MidRipS1SWS');
A = getResource(A,'MidRipS2SWS');



A = registerResource(A, 'Sleep1UpState', 'cell', {[], []}, ...
    'sleep1UpState', ['sleep1 sws upstate']);

A = registerResource(A, 'Sleep1UpState', 'cell', {[], []}, ...
    'sleep1UpState', ['sleep1 sws upstate']);

swsEpoch{1} = union(sleep1DeltaEpoch{1},sleep1SpindleEpoch{1});
swsEpoch{2} = union(sleep2DeltaEpoch{1},sleep2SpindleEpoch{1});

[p,dataset,e] = fileparts(current_dir(A));
clear p e;

eegfname = [current_dir(A) filesep dataset 'eeg' num2str(pfcTrace) '.mat'];
if exist([eegfname '.gz'])
	display(['unzipping file ' eegfname]);
	eval(['!gunzip ' eegfname '.gz']);
end
load(eegfname)
display(['zipping file ' eegfname]);
eval(['!gzip ' eegfname]);	
	
eval(['eegG = EEG' num2str(pfcTrace)]);
eval(['clear EEG' num2str(pfcTrace)]);

dEeg = resample(Data(eegG),1,5);
rg = Range(eegG);
rg = rg(1:5:end);
eegG = tsd(rg,dEeg);
	
clear dEeg;

eeg{1} = Restrict(eegG,swsEpoch{1});
eeg{2} = Restrict(eegG,swsEpoch{2});
clear eegG;

bin = 5; %in ms
win = 100; %#nb of points

	
for s=1:2
	
	b = fir1(96,[0.1 0.5]);
	dEegF = filtfilt(b,1,Data(eeg{s}));
	dEeg = dEegF.^2;
	dEeg = convn(dEeg,gausswin(40),'same')/sum(gausswin(20));
	dEegF = sqrt(dEeg);
	dEeg = convn(dEegF,gausswin(400),'same')/sum(gausswin(200));

	eegF = tsd(Range(eeg{s}),dEeg);
	
	figure(1),clf,hold on
	plot(Range(Qr,'s'),mean(zscore(full(Data(Qr)))')','r')

	plot(Range(eeg{s},'s'),zscore(Data(eeg{s}))/3,'k')
	plot(Range(eeg{s},'s'),zscore(dEegF)/3-2,'k')

	plot(Range(midRipS2SWS{1},'s'),0.1,'r*')
	
	keyboard

end

sleep1UpState = {upState{1}};
sleep2UpState = {upState{2}};

A = saveAllResources(A);


